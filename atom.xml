<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://super-ply.github.io/ply.github.io</id>
    <title>彭羊羊的个人学习网站</title>
    <updated>2021-12-04T07:24:27.662Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://super-ply.github.io/ply.github.io"/>
    <link rel="self" href="https://super-ply.github.io/ply.github.io/atom.xml"/>
    <subtitle>独立思考，知行合一</subtitle>
    <logo>https://super-ply.github.io/ply.github.io/images/avatar.png</logo>
    <icon>https://super-ply.github.io/ply.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 彭羊羊的个人学习网站</rights>
    <entry>
        <title type="html"><![CDATA[Ideal  快捷键大全]]></title>
        <id>https://super-ply.github.io/ply.github.io/post/ideal-kuai-jie-jian-da-quan/</id>
        <link href="https://super-ply.github.io/ply.github.io/post/ideal-kuai-jie-jian-da-quan/">
        </link>
        <updated>2021-11-30T02:34:49.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>psvm: public static void main(String[] args)</li>
<li>System.out.println();</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于图像识别的自动化测试工具：网易Airtest]]></title>
        <id>https://super-ply.github.io/ply.github.io/post/ji-yu-tu-xiang-shi-bie-de-zi-dong-hua-ce-shi-gong-ju-wang-yi-airtest/</id>
        <link href="https://super-ply.github.io/ply.github.io/post/ji-yu-tu-xiang-shi-bie-de-zi-dong-hua-ce-shi-gong-ju-wang-yi-airtest/">
        </link>
        <updated>2021-05-12T15:30:39.000Z</updated>
        <content type="html"><![CDATA[<p>2.1、下载airtestIDE<br>
直接官网下载对应平台的包：http://airtest.netease.com/<br>
2.2、连接手机<br>
官方文档：https://airtest.doc.io.netease.com/IDEdocs/device_connection/1_android_phone_connection/<br>
2.2.1、android连接<br>
4种连接方式：真机usb连接、远程连接、无线连接、代码连接<br>
以上连接方式都要开启USB调试。一般都在开发者选项---》usb调试<br>
有的手机没有开发者选项，需要打开隐藏开关。如华为，连点8次关于手机，就会出来开发者选项</p>
<p>真机usb连接：<br>
手机跟电脑用线连接起来<br>
手机开启开发者选项---&gt;USB调试<br>
点击连接面板中的 refresh ADB 按钮，设备列表将会刷新，<br>
点击列表内对应设备的 Connect 完成连接，<br>
远程连接：<br>
已知IP和端口的远程设备 ip:port，AirtestIDE可以直接连接，<br>
点开设备窗内的 远程设备连接 按钮<br>
将 adb connect ip:port 字段填入填充框内，点击 连接 按钮，<br>
远程设备将出现在设备列表中，点击 connect按钮。<br>
无线连接：<br>
确保手机开启了USB调试选项，并先用USB线将手机和电脑连接起来<br>
在电脑端执行命令 adb tcpip 5555 ，其中 5555 是端口号，可以根据自己的需求来指定，5555是默认值<br>
获取手机的IP地址，可以在 手机设置-关于手机-状态信息-IP地址 里找到，也可以执行 adb ifconfig来查看<br>
随后可以拔掉USB线，在AirtestIDE的 远程设备连接 处输入 adb connect 手机ip:刚才填入的端口号5555 ，点击连接，刷新ADB后就能在设备列表中看到连上的设备了<br>
如果因为网络波动、重启ADB等原因导致连接断开，重新执行一次 adb connect ip:port 即可。<br>
　　注意：</p>
<p>1更换一个网络环境需要使用新IP重新connect即可。<br>
　　　　2但是如果手机重启了，就需要重新连接数据线再次开启端口。<br>
　　　　3开启端口可以通过adb，也可以直接在手机上打开，但一般需要root权限和特殊软件。<br>
在代码中连接：<br>
如果在代码中/脚本运行时，需要填写Android:/// 字符串，又不清楚远程连接的手机应该如何填写的话，可以直接用AirtestIDE运行一次脚本，然后将IDE生成的 Android:/// 字符串复制使用。<br>
字符串需要填写的内容为 Android://adbhost:adbport/serialno ，其中，adbhost和adbport一般来说默认都是本机adb，即 127.0.0.1:5037 ，在远程连接手机时，与本地手机不同的是设备号serialno</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 学习路线]]></title>
        <id>https://super-ply.github.io/ply.github.io/post/java-xue-xi-lu-xian/</id>
        <link href="https://super-ply.github.io/ply.github.io/post/java-xue-xi-lu-xian/">
        </link>
        <updated>2021-02-25T07:59:41.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://super-ply.github.io/ply.github.io/post-images/1625671787060.png" alt="" loading="lazy">一.学习路线<br>
1.javase (java语言基础，基础语法和常用类库)<br>
2.数据库<br>
1.mysql<br>
2.jdbc<br>
3.前端<br>
1.html<br>
2.css<br>
3.javascript<br>
4.javaweb(后端)<br>
1.先学servlet，在学jsp<br>
5.web进阶<br>
1.AJAX<br>
2.JQuery<br>
6.javaweb项目实战<br>
基于servlet + JSP  + Mysql + JDBC + HTML + CSS + JS + JQUERY + AJAX 做一个web项目<br>
7.SSM三大框架<br>
Spring + SpringMVC + Mybatis<br>
先学 Mybatis 再Spring 再SpringMVC<br>
8.互联网分布式<br>
Dubbo<br>
MQ<br>
redis<br>
.......<br>
9.分布式项目实战<br>
需要一个企业级项目实战</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python之禅（一）：结构篇]]></title>
        <id>https://super-ply.github.io/ply.github.io/post/python-zhi-shan-yi-jie-gou-pian/</id>
        <link href="https://super-ply.github.io/ply.github.io/post/python-zhi-shan-yi-jie-gou-pian/">
        </link>
        <updated>2021-02-02T02:51:27.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>在我们的项目开始之际，第一件做的事不应该是急着码代码堆，而是应该设计好我们的项目结构。没有一个好的项目结构，就急着去堆代码的话，码着码着你就会发现项目变成了一堆“屎山”🤧🤧🤧。所以我们要学会利用Python的特性来创造简洁、高效的代码。项目需要哪些功能？哪些模块？数据在项目中如何流转？功能模块之间是怎样的联系？我们可以先列一个大致的规划，从而帮我们理清我们的开发思路和确定最终的产品形态。如果你自己缺乏这方面的经验和知识，没有关系，我将带你了解如何优雅的构建你的工程项目，本篇文章我先来介绍一下一个规范的仓库结构应该包含哪些内容。</p>
<p>仓库的结构是工程结构中重要的一部分，如果你的仓库目录一团糟，没有清晰的结构，只有一堆的文件且没有任何的说明，这只会使你和你的同事耗费更多的时间在理解寻找你的模块上，事倍功半。好的仓库结构应该包含以下内容：</p>
<ul>
<li>
<p>License(./License.txt)：许可说明和授权。如果你经常去github上浏览一些优秀项目的话，你会发现在他们的项目根目录会有一个License授权文件，这是作者用来作为版权许可的声明。如果我们 Copy 了别人的代码或者文字同时没注意这些的话，在国外法律意识特别强的环境下，我们的作品会因触犯别人的权益而违法。<code>开源不等于免费，开源也不等于没有约束！！！</code></p>
</li>
<li>
<p>Readme.md(./Readme.md):是对项目的一个说明介绍。它应该包含的有：</p>
<ul>
<li>项目的定位、项目的基本功能</li>
<li>代码的运行方法：安装环境和启动命令等</li>
<li>简要的使用说明</li>
<li>代码的目录结构说明，甚至可以详细的说下软件的基本原理</li>
<li>常见的问题说明</li>
</ul>
</li>
<li>
<p>Documation（./docs/）: 依赖包的参考文档。这没什么好说的，追求规范的话就加上。</p>
</li>
<li>
<p>test_xxx.py (./tests/ ) : 存放测试程序文件。存放单元测试、接口测试等测试文件。</p>
</li>
<li>
<p>setup.py(./setup.py) : 打包和发布管理文件。即程序启动入口。</p>
</li>
<li>
<p>examples.py(./examples/):存放具体的功能模块代码。这里就是具体的功能模块代码，具体分类是实际情况而定。</p>
</li>
</ul>
<p>说完仓库结构，我再来说下代码结构问题。现如今，规范优雅的代码风格和结构已成为了一个考量程序员是否合格的标准之一。对代码结构如此严格要求归根到底就因为<code>&quot;代码是给人看的，顺便给机器运行一下&quot;</code>,好的代码结构能让人一目了然，心情愉悦。</p>
<p>得益于Python提供的导入与管理模块的方式，我们结构化Python项目就变得相对简单。而这带来的坏处也很明显，就是它的结构化容易做的很糟糕。糟糕的结构往往有以下几种特征：</p>
<ul>
<li>多重且混乱的依赖关系：类与类之间存在循环相互调用现象。这种情况，万不得已的时候要学会在函数或者方法内部使用import语句</li>
<li>隐含耦合：类与类之间耦合性太强。你可能改动一个类会导致二三十条用例发生变化，牵一发而动全身，动弹不得。</li>
<li>大量使用全局变量：不同的模块都可以自由的访问全局变量，可能会导致全局变量的不可预知性，容易发生可怕的错误，特别是在多线程的程序中。</li>
<li>面条式代码：多重嵌套的if语句和 for循环，包含大量的复制粘贴的过程代码，没有明确的逻辑模块分割。</li>
<li>混沌代码：一段代码中出现上百段相似的逻辑碎片，这类通常都是缺乏合适结构的类和对象。</li>
</ul>
<p>在一个健康的开发周期中，代码风格，API设计和自动化是非常关键的，因此一定要注意代码的结构。</p>
<p>独立思考，知行合一，写出最好最优美的代码是我的宗旨，我们下期再见！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[这是我的第一个博客]]></title>
        <id>https://super-ply.github.io/ply.github.io/post/zhe-shi-wo-di-yi-pian-wen-dang/</id>
        <link href="https://super-ply.github.io/ply.github.io/post/zhe-shi-wo-di-yi-pian-wen-dang/">
        </link>
        <updated>2021-01-14T12:40:09.000Z</updated>
        <summary type="html"><![CDATA[<p>🤡🤡🤡<br>
这是我的第一个博客站点，</p>
]]></summary>
        <content type="html"><![CDATA[<p>🤡🤡🤡<br>
这是我的第一个博客站点，</p>
<!-- more -->
<p>由于本人是个技术渣又懒，所以用的是这款Gridea工具，亲测很好用，感兴趣的朋友可以查看上一篇官网文章，搭建过程十分简单。以后会不定期的在这里发布一些日常生活和学习日志，感兴趣的朋友可以关注一下，谢谢！😛😛😛<br>
<img src="https://super-ply.github.io/ply.github.io/post-images/1611143414431.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://super-ply.github.io/ply.github.io/post/hello-gridea/</id>
        <link href="https://super-ply.github.io/ply.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！</p>
<!-- more -->
<p>✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...<br>
<a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>